name: Hello World

on:
    push:
        branches:
            - main

jobs:
    say-hello:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Echo message
              run: echo "Hello, world!"
# name: Deploy to Production

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# env:
#   REGISTRY: ghcr.io
#   IMAGE_NAME: ${{ github.repository }}

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Log in to Container Registry
#         uses: docker/login-action@v3
#         with:
#           registry: ${{ env.REGISTRY }}
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Extract metadata for Docker
#         id: meta
#         uses: docker/metadata-action@v5
#         with:
#           images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#           tags: |
#             type=sha,prefix={{branch}}-
#             type=raw,value=latest,enable={{is_default_branch}}

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v5
#         with:
#           context: .
#           push: true
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}
#           cache-from: type=gha
#           cache-to: type=gha,mode=max

#       - name: Deploy to Server
#         uses: appleboy/ssh-action@v1.0.3
#         with:
#           host: ${{ secrets.SERVER_HOST }}
#           username: ${{ secrets.SERVER_USER }}
#           key: ${{ secrets.SERVER_SSH_KEY }}
#           port: ${{ secrets.SERVER_PORT || 22 }}
#           script: |
#             # Navigate to deployment directory
#             cd ${{ secrets.DEPLOY_PATH || '/opt/chat-app' }}

#             # Log in to GitHub Container Registry
#             echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

#             # Pull latest image
#             docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

#             # Stop and remove old container
#             docker-compose down || true

#             # Start new container
#             docker-compose up -d

#             # Wait for health check
#             echo "Waiting for application to start..."
#             sleep 10

#             # Check if container is healthy
#             if docker ps | grep -q chat-app; then
#               echo "✅ Deployment successful!"

#               # Run database migrations
#               docker-compose exec -T web bundle exec rails db:migrate

#               # Clean up old images
#               docker image prune -af --filter "until=24h"
#             else
#               echo "❌ Deployment failed - container not running"
#               docker-compose logs
#               exit 1
#             fi

#       - name: Health Check
#         run: |
#           echo "Checking application health..."
#           for i in {1..10}; do
#             if curl -f http://${{ secrets.SERVER_HOST }}/ > /dev/null 2>&1; then
#               echo "✅ Application is healthy!"
#               exit 0
#             fi
#             echo "Attempt $i failed, retrying in 5 seconds..."
#             sleep 5
#           done
#           echo "❌ Health check failed after 10 attempts"
#           exit 1

#       - name: Notify on Failure
#         if: failure()
#         run: |
#           echo "::error::Deployment failed! Check the logs above."
